<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.lhz.lyt.dao.BlogMapper" >
  <resultMap id="BaseResultMap" type="cn.lhz.lyt.pojo.Blog" >
    <result column="blog_id" property="blogId" jdbcType="VARCHAR" />
    <result column="blog_browse_times" property="blogBrowseTimes" jdbcType="VARCHAR" />
    <result column="blog_time" property="blogTime" jdbcType="VARCHAR" />
    <result column="blog_points" property="blogPoints" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.lhz.lyt.pojo.Blog" extends="BaseResultMap" >
    <result column="blog_text" property="blogText" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    blog_id, blog_browse_times, blog_time, blog_points
  </sql>
  <sql id="Blob_Column_List" >
    blog_text
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.lhz.lyt.pojo.BlogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.lhz.lyt.pojo.BlogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.lhz.lyt.pojo.BlogExample" >
    delete from blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.lhz.lyt.pojo.Blog" >
    insert into blog (blog_id, blog_browse_times, blog_time, 
      blog_points, blog_text)
    values (#{blogId,jdbcType=VARCHAR}, #{blogBrowseTimes,jdbcType=VARCHAR}, #{blogTime,jdbcType=VARCHAR}, 
      #{blogPoints,jdbcType=VARCHAR}, #{blogText,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.lhz.lyt.pojo.Blog" >
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="blogId != null" >
        blog_id,
      </if>
      <if test="blogBrowseTimes != null" >
        blog_browse_times,
      </if>
      <if test="blogTime != null" >
        blog_time,
      </if>
      <if test="blogPoints != null" >
        blog_points,
      </if>
      <if test="blogText != null" >
        blog_text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="blogId != null" >
        #{blogId,jdbcType=VARCHAR},
      </if>
      <if test="blogBrowseTimes != null" >
        #{blogBrowseTimes,jdbcType=VARCHAR},
      </if>
      <if test="blogTime != null" >
        #{blogTime,jdbcType=VARCHAR},
      </if>
      <if test="blogPoints != null" >
        #{blogPoints,jdbcType=VARCHAR},
      </if>
      <if test="blogText != null" >
        #{blogText,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.lhz.lyt.pojo.BlogExample" resultType="java.lang.Integer" >
    select count(*) from blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update blog
    <set >
      <if test="record.blogId != null" >
        blog_id = #{record.blogId,jdbcType=VARCHAR},
      </if>
      <if test="record.blogBrowseTimes != null" >
        blog_browse_times = #{record.blogBrowseTimes,jdbcType=VARCHAR},
      </if>
      <if test="record.blogTime != null" >
        blog_time = #{record.blogTime,jdbcType=VARCHAR},
      </if>
      <if test="record.blogPoints != null" >
        blog_points = #{record.blogPoints,jdbcType=VARCHAR},
      </if>
      <if test="record.blogText != null" >
        blog_text = #{record.blogText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update blog
    set blog_id = #{record.blogId,jdbcType=VARCHAR},
      blog_browse_times = #{record.blogBrowseTimes,jdbcType=VARCHAR},
      blog_time = #{record.blogTime,jdbcType=VARCHAR},
      blog_points = #{record.blogPoints,jdbcType=VARCHAR},
      blog_text = #{record.blogText,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update blog
    set blog_id = #{record.blogId,jdbcType=VARCHAR},
      blog_browse_times = #{record.blogBrowseTimes,jdbcType=VARCHAR},
      blog_time = #{record.blogTime,jdbcType=VARCHAR},
      blog_points = #{record.blogPoints,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>